name: documentation

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install dependencies
        run: |
          pip install -r requirements/development.txt
          pip install -r requirements/documentation.txt
      - name: Sphinx build
        run: make clean && make doc
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Deploy to GitHub Pages (branch)
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name != 'push' && github.ref != 'refs/heads/main' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          destination_dir: branch/${{ steps.extract_branch.outputs.branch }}
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          destination_dir: ./
          keep_files: true
      - name: force-redeployment
        run: |
          git fetch --all
          git checkout gh-pages
          git pull --ff-only
          touch .nojekyll
          git add -f .nojekyll
          git config user.name "GitHub Actions Bot"
          git config user.email "bot@github.com"
          git commit -am "docs: force redeploy"
